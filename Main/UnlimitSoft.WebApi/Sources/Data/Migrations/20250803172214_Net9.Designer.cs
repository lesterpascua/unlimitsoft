// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnlimitSoft.WebApi.Sources.Data;

#nullable disable

namespace UnlimitSoft.WebApi.Sources.Data.Migrations
{
    [DbContext(typeof(DbContextWrite))]
    [Migration("20250803172214_Net9")]
    partial class Net9
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UnlimitSoft.Message.EventPayload", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Event unique identifier");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Json with the body serialized");

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("Operation correlation identifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .HasComment("Date when the event was created");

                    b.Property<bool>("IsDomainEvent")
                        .HasColumnType("bit")
                        .HasComment("Specify if an event belown to domain. This have optimization propouse");

                    b.Property<bool>("IsPubliched")
                        .HasColumnType("bit")
                        .HasComment("Indicate if the event was already published");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Name of the event. This is use to identified the event type");

                    b.Property<DateTime?>("Scheduled")
                        .HasColumnType("datetime2")
                        .HasComment("Date when the event was scheduled to publish");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasComment("Identifier of the service where the event below");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("PKey of the identity where event was attached");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasComment("Version or order of the event in the stream. Este valor lo asigna la entidad que lo genero y \r\n    /// es el que ella poseia en el instante en que fue generado el evento");

                    b.Property<string>("WorkerId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("Identifier of the worker were the event is create");

                    b.HasKey("Id");

                    b.HasIndex("Created");

                    b.HasIndex("IsPubliched");

                    b.ToTable("VersionedEvent", "dbo", t =>
                        {
                            t.HasComment("Store the event generated for the service. All event will be taken from here and publish");
                        });
                });

            modelBuilder.Entity("UnlimitSoft.WebApi.Sources.Data.Model.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Customer", "dbo");
                });

            modelBuilder.Entity("UnlimitSoft.WebApi.Sources.Data.Model.Lock", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Lock", "dbo");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoftUnlimit.CQRS.Test.Data;

namespace SoftUnlimit.CQRS.Test.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20200517172723_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Own.CQRS.EventSourcing.VersionedEventPayload", b =>
                {
                    b.Property<Guid>("SourceID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrSnapshot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EntityID")
                        .HasColumnType("bigint");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("IsDomainEvent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPubliched")
                        .HasColumnType("bit");

                    b.Property<string>("PrevSnapshot")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SourceID", "Version");

                    b.ToTable("VersionedEventPayload");
                });

            modelBuilder.Entity("Own.CQRS.Test.Model.Address", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Own.CQRS.Test.Model.Customer", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CID")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Own.CQRS.Test.Model.Address", b =>
                {
                    b.HasOne("Own.CQRS.Test.Model.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
